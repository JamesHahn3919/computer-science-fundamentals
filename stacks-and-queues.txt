Exercises

1. What is the main difference between a stack and a queue?

The main difference is a stack stores in LIFO order, while a queue stores elements in FIFO order

2. What are the similarities between stacks and queues?

They are both data structures that store data in ordered lists

3. Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

I would use a stack for the UNDO option becuase the last change you made would be the first one accessed by the UNDO option, and a queue for the REDO option, so that you could redo everything in the order it was originally done after using the UNDO feature

Programming Questions

You may program the following question in any language of your choice. Before you begin coding, write out a plan as to how you will solve the question.

1. Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

function reverse(str) {
    var stack = [];
    for (var i = 0; i < str.length; i++) {
        stack.push(str[i]);
    }
    var reverseString = '';
    while (stack.length > 0) {
        reverseString += stack.pop();
    }
    return reverseString;
}
reverse('Bloc!'); 

2. Implement the pop method of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure. Since the internal list is not the same as defined in the checkpoint, it may help to rewrite the pseudocode first.

var queue = ["Medium", "Youtube", "Wikipedia", "Github", "Bloc"]; 

function popQueue() {
    return queue.splice(queue.length-1, 1) [0];
}

console.log(popQueue(queue));

3. Implement the enqueue and dequeue methods defined in the checkpoint inside your own Queue class.


///enqueue

var queue = ["Medium", "Youtube", "Wikipedia", "Github", "Bloc"]; 

function enqueue(arr) {
    arr.push("Stack Overflow");
    return arr;
}

console.log(enqueue(queue));

///dequeue

var queue = ["Medium", "Youtube", "Wikipedia", "Github", "Bloc"]; 

function dequeue(arr) {
    return arr.shift();
}

console.log(dequeue(queue));
Exercises

1. A line of people at an amusement park ride.

-The line is composed of members, represented as strings.
-There is a front to the line, as well as a back.
-When someone enters the line, place them at the end.
-People may leave the line whenever they see fit, and those behind them take their place.
Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.
c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).
d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?
e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?
f) If Patrick wants to leave the line, how would you delete him from the array?

var parkLine = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]  // a

parkLine.push("Mary"); //b

function lineSearch(arr, personToFind) {
  for (var i=0; i<arr.length; i++) {
    if (arr[i] == personToFind) {
      return i;
    }
  } return null;
} 

lineSearch(parkLine, "Josh") //c

lineSearch(parkLine, "Emily") //d, Function should return null if search result is not found

parkLine.splice(1, 0, "Melissa"); //e

parkLine.splice(1, 4); //f (using Patrick's new index after adding Mary in section b)


2. Provide another real-world example that you can model using a data structure.

Doctor's office records
Records are organized by patient name, represented as strings
If a patient has multiple visits, organize by date from earliest to most recent
When a patient changes doctors, take them out of the records
If a patient changes doctors, the next patient in alphabetical order will take their place in the queue


3. How would your data structure allow developers to access and manipulate the data?

Insert new patients in alphabetical order in list
Remove former patients from list
Change patients place in list if they undergo a name change
Add new visit records with date if a customer is returning